{
  "env": {
    "node": true,
    "es6": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
    // "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "project": "./tsconfig.json"
  },
  "rules": {
    "no-undef": "off",
    "no-unused-vars": "off",
    "no-constant-condition": "off",
    "@typescript-eslint/ban-ts-comment": "warn",
    "@typescript-eslint/prefer-interface": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ],
        "leadingUnderscore": "allow",
        "selector": "default"
      }
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/type-annotation-spacing": [
      "error",
      {
        "before": false,
        "after": true,
        "overrides": {
          "arrow": {
            "before": true,
            "after": true
          }
        }
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "args": "none"
      }
    ],
    "prefer-arrow-callback": [
      "error",
      {
        "allowUnboundThis": false
      }
    ],
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/prefer-regexp-exec": "off",
    "curly": "error",
    "eol-last": "error",
    "no-caller": "error",
    "no-multiple-empty-lines": "error",
    "no-new-wrappers": "error",
    "no-eval": "error",
    "no-invalid-this": "error",
    "no-console": "off",
    "@typescript-eslint/no-require-imports": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "no-trailing-spaces": "error",
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "no-unused-expressions": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "one-var": [
      "error",
      {
        "initialized": "never",
        "uninitialized": "never"
      }
    ],
    "prefer-const": "error",
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "none",
          "requireLast": false
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        }
      }
    ],
    "default-case": "error",
    "eqeqeq": [
      "error",
      "always"
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "func-call-spacing": [
      "error",
      "never"
    ],
    "no-multi-spaces": [
      "error",
      {
        "ignoreEOLComments": true
      }
    ],
    "@typescript-eslint/no-empty-function": "off"
    /*
        "align": [true, "parameters", "statements"],
        "no-angle-bracket-type-assertion": true,
        "no-default-export": true,
        "one-line": [
          true,
          "check-catch",
          "check-else",
          "check-finally",
          "check-open-brace",
          "check-whitespace"
        ],
        "typedef-whitespace": [
          true,
          {
            "call-signature": "onespace",
            "index-signature": "nospace",
            "parameter": "nospace",
            "property-declaration": "nospace",
            "variable-declaration": "nospace"
          },
          {
            "call-signature": "onespace",
            "index-signature": "onespace",
            "parameter": "onespace",
            "property-declaration": "onespace",
            "variable-declaration": "onespace"
          }
        ],
        "whitespace": [
          true,
          "check-branch",
          "check-decl",
          "check-operator",
          "check-separator",
          "check-type",
          "check-typecast"
        ] */
  }
}
